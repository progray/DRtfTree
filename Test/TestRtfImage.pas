unit TestRtfImage;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, StrUtils, Classes, SysUtils, DateUtils, UITypes, TestRtfBase,
  RtfTree, RtfClasses, RtfImg;

type

  TTestRtfImage = class(TRtfTestCase)
  strict private
    FRtfTree: TRtfTree;
    FPictNode: TRtfTreeNode;
    FImg: TRtfImage;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestImageNode;
    procedure TestImageHexData;
    procedure TestImageBinData;
  end;

implementation

uses
  PngImage;

procedure TTestRtfImage.SetUp;
begin
  FRtfTree := TRtfTree.Create;
  FRtfTree.IgnoreWhitespace := False;
  FRtfTree.LoadFromFile(AssetPath + 'testdoc3.rtf');
  FPictNode := FRtfTree.MainGroup.SelectNodes('pict')[2].ParentNode;
  FImg := TRtfImage.Create(FPictNode);
end;

procedure TTestRtfImage.TearDown;
begin
  FreeAndNil(FRtfTree);
  FreeAndNil(FImg);
end;

procedure TTestRtfImage.TestImageNode;
begin
  CheckEquals(6615, FImg.Height, 'Image height matched');
  CheckEquals(7938, FImg.Width, 'Image width matched');

  CheckEquals(3750, FImg.DesiredHeight, 'Desired image height matched');
  CheckEquals(4500, FImg.DesiredWidth, 'Desired image width matched');

  CheckEquals(100, FImg.ScaleX, 'Image scale X is matched');
  CheckEquals(100, FImg.ScaleY, 'Image scale Y is matched');

  CheckIs(FImg.Picture.Graphic, TPngImage, 'Image type is PNG');
end;

procedure TTestRtfImage.TestImageHexData;
begin
  Str.LoadFromFile(AssetPath + 'imghexdata.txt');
  CheckEquals(Str.Text, TStringStream(FImg.HexData).DataString, 'Image hex data is matched');
end;

procedure TTestRtfImage.TestImageBinData;
var
  Img1, Img2: TStringStream;

begin
  Img1 := TStringStream.Create;
  Img2 := TStringStream.Create;
  try
    FImg.SaveToFile(AssetPath + 'img-result.jpg');
    Img1.LoadFromFile(AssetPath + 'img-result.jpg');
    Img2.LoadFromFile(AssetPath + 'image1.jpg');
    // TODO: do not compare direct image file instead, it is better to
    // use image data as of image format contained
    CheckEquals(Img2.DataString, Img1.DataString, 'Saved image matched');
  finally
    FreeAndNil(Img1);
    FreeAndNil(Img2);
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TTestRtfImage.Suite);

end.

